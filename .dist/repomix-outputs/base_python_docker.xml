This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

<additional_info>

</additional_info>

</file_summary>

<directory_structure>
Dockerfile
README.md
requirements.txt
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path="Dockerfile">
FROM python:3.11-slim

WORKDIR /app

RUN apt-get update && apt-get install -y \
    git \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first to leverage Docker cache
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Create a non-root user and switch to it
RUN useradd -m appuser && chown -R appuser:appuser /app
USER appuser

# Expose the default port that will be used by most agents
EXPOSE 8001
</file>

<file path="README.md">
# Base Python Docker Image for Ottomator Agents

This is the base Docker image used by Python-based autogen_studio agents. It provides a common foundation with all the necessary Python packages pre-installed.

## Features

- Python 3.11 with slim base image
- Common dependencies pre-installed (FastAPI, Uvicorn, Pydantic, etc.)
- Non-root user setup for security
- Port 8001 exposed by default

## Building the Image

```bash
docker build -t ottomator/base-python:latest .
```

## Using the Base Image

In your agent's Dockerfile, use this as your base image:

```dockerfile
FROM ottomator/base-python:latest

WORKDIR /app

# Copy your application code
COPY . .

# Add your custom commands here
CMD ["uvicorn", "your_app:app", "--host", "0.0.0.0", "--port", "8001"]
```

## Included Packages

See `requirements.txt` for the full list of pre-installed packages.
</file>

<file path="requirements.txt">
fastapi
uvicorn
pydantic
supabase
python-dotenv
requests
asyncpg
</file>

</files>
